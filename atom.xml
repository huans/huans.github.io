<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Huan&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://huans.github.io/"/>
  <updated>2017-12-16T14:47:21.052Z</updated>
  <id>https://huans.github.io/</id>
  
  <author>
    <name>Huan Si</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux下BLAST+的安装与使用</title>
    <link href="https://huans.github.io/2017/12/16/blast/"/>
    <id>https://huans.github.io/2017/12/16/blast/</id>
    <published>2017-12-16T12:54:31.000Z</published>
    <updated>2017-12-16T14:47:21.052Z</updated>
    
    <content type="html"><![CDATA[<p>原本计划对几个亚洲棉基因进行blast比对寻找在陆地棉中的同源基因，但是服务器抽风了，导致计划被打乱，不过刚好也乘此机会学习和总结一下BLAST+的安装和使用。与BLAST相比，BLAST+有很多改进和提高，NCBI强烈推荐放弃BLAST，使用BLAST+。<a id="more"></a>网上一些教程文章一开始写的是BLAST+写着写着就变成了BLAST，刚开始看的时候迷糊了半天。<br>本文实测环境为Linux64位系统。</p><p>##1.安装配置BLAST+<br>首先是下载程序，</p><pre><code>wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.2.30+-x64-linux.tar.gz</code></pre><p>对文件解压</p><pre><code>tar -zxvf ncbi-blast-2.2.30+-x64-linux.tar.gz</code></pre><p>为了方便管理，更喜欢将其移至我的本地安装目录中</p><pre><code>mv ncbi-blast-2.2.30+ ~/local/app/ # 移动cd ~/local/app/                    # 进入本地程序安装路径mv ncbi-blast-2.2.30+ blast        # 修改目录名</code></pre><p>这样就安装到我平时安装本地软件的文件夹里了，当然和其他软件的安装方法一样，你需要将blast+的路径加入到环境变量中，方便以后的调取。</p><pre><code>echo &quot;export PATH=/db/home/shenwei/local/app/blast/bin:\$PATH&quot; &gt;&gt; ~/.bashrcsource ~/.bashrc</code></pre><p>现在一切安装工作已经就绪了</p><p>##2.配置本地的BLAST库<br>为了方便大批量的比对工作，提高工作效率，本地化库是个很好的方法。<br>建立并编辑BLAST全局配置文件</p><pre><code>[hsi@node102 ~]$ cat .ncbirc  #内容如下[BLAST]BLASTDB=/home/hsi/blast/db</code></pre><p>这样配置的好处在于以后调用库的时候不需要写绝对路径，只输入名称就可以。</p><p>##3.准备库文件<br>因为我本地文件夹中有一套fastq格式的基因组序列，所以我直接就用本地文件，不再去下载了，这一部分就不再包括如何下载，如何更新的内容了。</p><p>FAST格式的文件不能作为库直接用于本地的blast，必须要利用makeblastdb进行格式化</p><pre><code>makeblastdb -in input_db -dbtype nucl -parse_seqids -out dbname</code></pre><p>-in: 后加输入文件<br>-dbtype: 代表数据库的类型，nucl是核酸类型，prot是蛋白质类型</p><p>如果该库需要经常使用，可将库文件移到前面配置的库文件的目录，今后在其它目录运行blast的时候，便可直接输入库名（不用输入绝对路径），直接使用。</p><pre><code>mv dbname.* ~/data/blast</code></pre><p>##4.执行BLAST</p><pre><code>blastn -query test.fa -db nt -outfmt 11 -evalue 1e-5 -out &quot;test.blastn@dbname&quot; -num_threads 8</code></pre><p>参数说明:<br>-query： 输入文件路径及文件名<br>-out：输出文件路径及文件名<br>-db：格式化了的数据库路径及数据库名<br>-outfmt：输出文件格式，总共有12种格式<br>-evalue：设置输出结果的e-value值<br>-num_descriptions：tabular格式输出结果的条数<br>-num_threads：线程数</p><p>核酸序列比对核酸数据库（blastn）以及核酸序列比对蛋白数据库（blastx）<br>与上面的blastp用法类似：</p><pre><code>blastn -query seq.fasta -out seq.blast -db dbname -outfmt 6 -evalue 1e-5 -num_descriptions 10 -num_threads 8blastx -query seq.fasta -out seq.blast -db dbname -outfmt 6 -evalue 1e-5 -num_descriptions 10 -num_threads 8</code></pre><p>参数比较简单不再赘述，详情请参考<a href="https://www.ncbi.nlm.nih.gov/books/NBK279690/" target="_blank" rel="noopener">《BLAST® Command Line Applications User Manual》</a>，<a href="http://www.yelinsky.com/blog/archives/421.html" target="_blank" rel="noopener">BLAST+使用方法</a>，<a href="http://blog.shenwei.me/local-blast-installation/" target="_blank" rel="noopener">《Linux系统中NCBI BLAST+本地化教程》</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原本计划对几个亚洲棉基因进行blast比对寻找在陆地棉中的同源基因，但是服务器抽风了，导致计划被打乱，不过刚好也乘此机会学习和总结一下BLAST+的安装和使用。与BLAST相比，BLAST+有很多改进和提高，NCBI强烈推荐放弃BLAST，使用BLAST+。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>利用Hexo+github简单搭建一个blog</title>
    <link href="https://huans.github.io/2017/12/14/First-blog/"/>
    <id>https://huans.github.io/2017/12/14/First-blog/</id>
    <published>2017-12-14T14:23:01.912Z</published>
    <updated>2017-12-14T14:23:05.027Z</updated>
    
    <content type="html"><![CDATA[<p>发现Github这个网站大概是在一年前了，由于某些原因，在课题开展的过程中或多或少的会需要用到一些用的计算机相关知识，偶然间发现Github这个网站，上面分享了非常多实用的，有趣的工具，刚开始觉得特别的炫酷（现在也是），后来就花了很短时间慢慢研究了一下，估摸着还算不上浅尝辄止，<a id="more"></a>直到昨天晚上在看些大牛的博客的时候才突然来了兴致想要搭建一个自己的网站，于是顺理成章地想起Github。Github的功能和特色在此不再赘述，写这篇文章也主要是记录一下耗时近七八个小时的学习过程。如果它能对后来的人有什么启示，那就更有意义了。</p><h2 id="注：文章部分内容转自网络，链接在文章最后，感谢作者无私分享，过程中同样得到了师兄的帮助（http-tiramisutes-github-io-）。"><a href="#注：文章部分内容转自网络，链接在文章最后，感谢作者无私分享，过程中同样得到了师兄的帮助（http-tiramisutes-github-io-）。" class="headerlink" title="注：文章部分内容转自网络，链接在文章最后，感谢作者无私分享，过程中同样得到了师兄的帮助（http://tiramisutes.github.io/）。"></a>注：文章部分内容转自网络，链接在文章最后，感谢作者无私分享，过程中同样得到了师兄的帮助（<a href="http://tiramisutes.github.io/）。" target="_blank" rel="noopener">http://tiramisutes.github.io/）。</a></h2><p>##基本步骤<br>1.注册github账号，新建一个仓库<br>2.安装、配置Hexo<br>3.安装、配置git<br>4.发布文章<br>5.选择主题</p><p>##1.注册github账号，新建仓库<br>进入<a href="https://github.com/，在下图的框中，分别输入自己的用户名，邮箱，密码。" target="_blank" rel="noopener">https://github.com/，在下图的框中，分别输入自己的用户名，邮箱，密码。</a></p><p>这些都比较简单，没有遇到任何阻碍。<br>接着就是创建仓库，如图所示，也比较简单。</p><p>##2.安装Hexo<br>配置Node.js环境<br>下载Node.js安装文件：<br>Windows Installer 32-bit<br>Windows Installer 64-bit<br>根据自己的Windows版本选择相应的安装文件，要是不知道，就安装32-bit的吧- -。<br>保持默认设置即可，一路Next，安装很快就结束了。 然后我们检查一下是不是要求的组件都安装好了，同时按下Win和R，打开运行窗口：<br>在新打开的窗口中输入cmd，敲击回车，打开命令行界面。（下文将直接用打开命令行来表示以上操作，记住哦~） 在打开的命令行界面中，输入<br>node -v<br>npm -v</p><p>配置Git环境</p><p>下载Git安装文件：<br>GIt官网下载地址：<br>Git-2.6.3-64-bit.exe<br>然后就进入了Git的安装界面，<br>和Node.js一样，大部分设置都只需要保持默认，但是出于我们操作方便考虑，建议PATH选项按照下图选择：</p><p>Git PATH设置</p><p>一样的，我们来检查一下Git是不是安装正确了，打开命令行，输入：<br>git –version<br>在E盘目录下创建Hexo文件夹（在哪个盘无特殊要求），并在命令行的窗口进入到该目录<br>在命令行中输入：<br>npm install hexo-cli -g<br>可能你会看到一个WARN，但是不用担心，这不会影响你的正常使用。 然后输入<br>npm install hexo –save<br>然后你会看到命令行窗口刷了一大堆白字，下面我们来看一看Hexo是不是已经安装好了。 在命令行中输入：<br>hexo -v<br>如果你看到了如图文字，则说明已经安装成功了。</p><p>初始化Hexo<br>接着上面的操作，输入：<br>hexo init<br>然后输入：<br>npm install<br>之后npm将会自动安装你需要的组件，只需要等待npm操作即可。<br>注意：这个步骤需要空文件夹，所以你需要在此之间新建一个文件夹，位置暂时没发现有什么特殊要求</p><p>首次体验Hexo<br>继续操作，同样是在命令行中，输入：<br>hexo g<br>然后输入：<br>hexo s<br>然后会提示：<br>INFO Hexo is running at <a href="http://0.0.0.0:4000/" target="_blank" rel="noopener">http://0.0.0.0:4000/</a>. Press Ctrl+C to stop.<br>在浏览器中打开<a href="http://localhost:4000/，你将会看到配置完成以后页面" target="_blank" rel="noopener">http://localhost:4000/，你将会看到配置完成以后页面</a><br>到目前为止，Hexo在本地的配置已经全都结束了。</p><p>下面会讲解怎样将Hexo与github page 联系起来</p><p>##3.连接本地git和Github</p><p>1、设置Git的user name和email：(如果是第一次的话)</p><p>git config –global user.name “xujun”<br>git config –global user.email “gdutxiaoxu@163.com”<br>2、生成密钥<br> ssh-keygen -t rsa -C “gdutxiaoxu@163.com”<br>一直按Enter键就好了，最终生成密钥文件具体路径在~/.ssh中，打开文件复制其中的key到下图中<br>配置Deployment<br>同样在_config.yml文件中，找到Deployment，然后按照如下修改：<br>deploy:<br>  type: git<br>  repo: git@github.com:yourname/yourname.github.io.git<br>  branch: master<br>比如我的仓库的地址是git@github.com:gdutxiaoxu/gdutxiaoxu.github.io.git，所以配置如下<br>deploy:<br>  type: git<br>  repo: git@github.com:gdutxiaoxu/gdutxiaoxu.github.io.git<br>  branch: master</p><p>注意：此处冒号（：）后必须要有空格，不然就会报错了</p><p>写博客、发布文章</p><p>新建一篇博客，执行下面的命令：</p><p>hexo new post “article title”</p><p>这时候在我的 电脑的目录下 F:\hexo\source\ _posts 将会看到 article title.md 文件<br>用MarDown编辑器打开就可以编辑文章了。文章编辑好之后，运行生成、部署命令：</p><p>hexo g   // 生成<br>hexo d   // 部署<br>当然你也可以执行下面的命令，相当于上面两条命令的效果<br>hexo d -g #在部署前先生成<br>部署成功后访问 你的地址，<a href="https://yourName.github.io（这里输入我的地址：" target="_blank" rel="noopener">https://yourName.github.io（这里输入我的地址：</a> <a href="https://gdutxiao.github.io" target="_blank" rel="noopener">https://gdutxiao.github.io</a> ),将可以看到生成的文章。</p><p>踩坑提醒</p><p>1）注意需要提前安装一个扩展：<br>npm install hexo-deployer-git –save</p><p>##4.主题选择<br>1）安装 NexT<br>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。具体到 NexT 来说，安装步骤如下。</p><p>下载主题</p><p>如果你熟悉 Git， 建议你使用 克隆最新版本 的方式，之后的更新可以通过 git pull 来快速更新， 而不用再次下载压缩包替换。</p><p>克隆最新版本<br>下载稳定版本<br>在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：</p><p>cd your-hexo-site<br>git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p><p>2）启用主题</p><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。</p><p>启用 NexT 主题</p><p>theme: next<br>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。</p><p>3）验证主题</p><p>首先启动 Hexo 本地站点，并开启调试模式（即加上 –debug），整个命令是 hexo s –debug。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：</p><p>INFO Hexo is running at <a href="http://0.0.0.0:4000/" target="_blank" rel="noopener">http://0.0.0.0:4000/</a>. Press Ctrl+C to stop.<br>此时即可使用浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> ，检查站点是否正确运行。</p><p>现在，你已经成功安装并启用了 NexT 主题。下一步我们将要更改一些主题的设定，包括个性化以及集成第三方服务。</p><p>参考：手把手教你用Hexo+Github 搭建属于自己的博客(<a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">http://blog.csdn.net/gdutxiaoxu/article/details/53576018</a>)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;发现Github这个网站大概是在一年前了，由于某些原因，在课题开展的过程中或多或少的会需要用到一些用的计算机相关知识，偶然间发现Github这个网站，上面分享了非常多实用的，有趣的工具，刚开始觉得特别的炫酷（现在也是），后来就花了很短时间慢慢研究了一下，估摸着还算不上浅尝辄止，
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Disqus使用及报错处理</title>
    <link href="https://huans.github.io/2017/12/14/Disqus%E4%BD%BF%E7%94%A8%E5%8F%8A%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86/"/>
    <id>https://huans.github.io/2017/12/14/Disqus使用及报错处理/</id>
    <published>2017-12-14T14:11:37.367Z</published>
    <updated>2017-12-14T14:11:41.173Z</updated>
    
    <content type="html"><![CDATA[<p>刚刚接触评论系统，上网一搜发现普遍采用的第三方评论系统“多说”已经在今年6月阵亡了。幸好我的主题还能够支持另外一种评论系统——Disqus。目前这个博客使用apollo主题搭建，支持Disqus和duoshuo系统，尽管想要做的简洁一些，<a id="more"></a>但是不把评论系统加上去心里总是不太舒服，于是就着手开干。事情永远没有想象的顺利，所以才有了这篇文章。 </p><hr><h2 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h2><p>第一步，到Disqus官网注册账号，支持google和Twitter还有个啥不太记得了。</p><p>第二步，填写注册的信息，其中有一项website name非常坑爹（后面再说），我用的是github的用户名，没问题</p><p>第三步， 网上很多教程都差不多顺着点就行</p><p>第四步，各种配置，也很顺利</p><h2 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h2><ol><li><p>到这里一切看起来比较顺利，然而在往<strong>主题配置文件</strong>写入 disqus: your shortname 的时候出了麻烦，啥是shortname？前面好像没见过。只写了个website name。硬着头皮往上填了个website name，可想而知，不行，接连注册了好几个ID都没解决，无奈google，在官网的Q&amp;A里面找到了答案，打开账户，查看ID，此时地址栏里出现的第一个字符串（/分隔符）就是shortname，我。。。</p></li><li><p>以为事情到这就差不多了，谁曾想编译，部署文件到github后不管怎么刷新文章下面都没有评论区，以为是写入的命令有问题，结果翻来覆去改了很多遍都不行，连主题都删除重装了，没找到问题所在。偶然间本来的评论区出现如下提示：</p><p> We were unable to load Disqus. If you are a moderator please see our troubleshooting guide.</p><p> 当时就反应过来了，命令是没错的，可能是又是该死的网络，也就没去看troubleshooting guide，当机立断翻墙了，果然不出所料，Disqus也被墙了！！！</p></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这代表着如果你们不会科学上网就不能给我添加评论了~~~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚刚接触评论系统，上网一搜发现普遍采用的第三方评论系统“多说”已经在今年6月阵亡了。幸好我的主题还能够支持另外一种评论系统——Disqus。目前这个博客使用apollo主题搭建，支持Disqus和duoshuo系统，尽管想要做的简洁一些，
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://huans.github.io/2017/12/14/hello-world/"/>
    <id>https://huans.github.io/2017/12/14/hello-world/</id>
    <published>2017-12-14T09:30:10.434Z</published>
    <updated>2017-12-14T10:20:30.393Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
